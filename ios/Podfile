# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Firebase SDK 버전을 명시적으로 설정
$FirebaseSDKVersion = '11.11.0'
# Abseil 라이브러리 버전 명시적 설정 (Firebase 11.11.0과 호환되는 버전)
$AbseilVersion = '1.20240722.0'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Abseil 의존성 명시적 추가
  pod 'abseil', $AbseilVersion

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # BoringSSL-GRPC 타겟에 대한 특별 처리
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
    
    # Abseil 라이브러리 설정 추가
    if target.name.include?('abseil') || target.name.include?('Abseil')
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'ABSL_USES_STD_STRING_VIEW'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'ABSL_OPTION_USE_STD_STRING_VIEW'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'ABSL_LTS_RELEASE_VERSION=20240722'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        # 오류 억제 플래그 추가
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-comma -Wno-shorten-64-to-32 -Wno-documentation -Wno-everything -w'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -Wno-comma -Wno-shorten-64-to-32 -Wno-documentation -Wno-everything -w'
        # 템플릿 관련 경고 억제
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        # M1 호환성 설정
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end
    
    # gRPC 관련 타겟 설정 추가
    if target.name.start_with?('gRPC') || target.name.include?('gRPC')
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_ARES=0'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        
        # gRPC-Core 템플릿 오류 해결을 위한 추가 설정
        if target.name == 'gRPC-Core'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/gRPC-Core/include'
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/gRPC-Core/src'
          config.build_settings['DEFINES_MODULE'] = 'YES'
          # 컴파일러 플래그 설정 업데이트
          config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-comma -Wno-shorten-64-to-32 -Wno-documentation -Wno-everything -w'
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -Wno-comma -Wno-shorten-64-to-32 -Wno-documentation -Wno-everything -w'
          # 템플릿 관련 매크로 설정 추가
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_GRANT_PERMISSIONS=1'
          # 무시할 경고 플래그 추가
          config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = 'NO'
          config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
          # 최적화 설정
          config.build_settings['COMPILER_INDEX_STORE_ENABLE'] = 'NO'
          # Xcode 컴파일러 설정 추가
          if config.name == 'Debug'
            config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
          end
        end
      end
    end
    
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      # 비트코드 비활성화
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Xcode 14+ 호환성 설정
      if Gem::Version.new('14.0') <= Gem::Version.new(`xcodebuild -version`.split.second)
        config.build_settings.delete 'ARCHS'
      end
      
      # Firebase 및 기타 호환성 설정
      if target.name.start_with?('Firebase') || target.name.start_with?('Google') || target.name.start_with?('nanopb')
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        
        # Firebase 11.11.0 호환성 설정 추가
        if target.name.include?('Firestore')
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'COCOAPODS=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PB_FIELD_32BIT=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PB_NO_PACKED_STRUCTS=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PB_ENABLE_MALLOC=1'
        end
      end
      
      # arm64 시뮬레이터 아키텍처 제외 (M1 Mac 호환성)
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
